import streamlit as st
import requests
import json
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from streamlit.components.v1 import html

from packageKPS import *
from packageCharts import *

from PIL import Image



def main():
 

    
    #st.write(home())
    st.set_page_config(
        page_title="Koispe Dashboard",
        page_icon="✅",
        layout="wide",
    )    

       # Define the CSS style
    css_style = """
    <style>
    
    *{
    font-family:Copperplate;
    }
    .css-1xarl3l.e1vioofd1{
    display:none;
    }

    .css-wnm74r{
    text-align:center;
    font-size: 2rem;
    display: flex;
    flex-direction: row;
    -webkit-box-align: center;
    align-items: center;
    font-weight: 400;
    }
    
    .e1ugi8lo1.css-jhkj9c.ex0cdmw0{
        vertical-align: middle;
        overflow: hidden;
        color: inherit;
        fill: currentcolor;
        display: inline-flex;
        -webkit-box-align: center;
        align-items: center;
        font-size: 1.25rem;
        width: 40px;
        height: 40px;
        margin: 0px 0.125rem 0px 0px;
    }
    [data-testid="stSidebar"] {
        background-color: #f2f6fc; /* Replace with your desired color */
    }

    
    </style>"""

    with open( "style.css" ) as css:
        st.markdown( f'<style>{css.read()}</style>' , unsafe_allow_html= True)

    #st.markdown(css_style, unsafe_allow_html=True)

            # Load the JavaScript function code
    with open("animated_counter.js", "r") as file:
            js_code = file.read()


    st.sidebar.title("KPI's Dashboard")
    id=get_url_params()
    st.write("URL ID FROM VIDAVO:",id)
    st.write("ID from Flask application: ",id)
    # image = Image.open('https://dreamleague-soccerkits.com/wp-content/uploads/2021/07/Real-Madrid-Logo.png','rb')
    # with st.container():
    #     col1,col2,col3=st.columns(3)
    #     with col1:
    #         pass
    #     with col2:
    #         st.image("https://cmtprooptiki.gr/api/profile_images/"+str(id)+".png", width=300)
    #     with col3:
    #         pass
    # https://app.koispesupport.gr/koispe/api/getkoispe?id=1128

    #VIDAVO API CALL SPEICIFIC KOISPE WITH ID
    response = json.loads(requests.get("https://app.koispesupport.gr/koispe/api/getkoispe?id="+str(id)).text)
    response2 = json.loads(requests.get("https://app.koispesupport.gr/koispe/api/getemployment?id="+str(id)).text)
    response3 = json.loads(requests.get("https://app.koispesupport.gr/koispe/api/getfinancial?id="+str(id)).text)




    #VIDAVO API CALL GENERAL
    # response = json.loads(requests.get("https://app.koispesupport.gr/koispe/api/getkoispe").text)
    # response2 = json.loads(requests.get("https://app.koispesupport.gr/koispe/api/getemployment").text)
    # response3 = json.loads(requests.get("https://app.koispesupport.gr/koispe/api/getfinancial").text)

    #MYAPP ON MY API
    # response = json.loads(requests.get("https://cmtprooptiki.gr/api/getkoisenew.json").text)
    # response2 = json.loads(requests.get("https://cmtprooptiki.gr/api/getemploymentcmt.json").text)
    # response3 = json.loads(requests.get("https://cmtprooptiki.gr/api/getfinancial.json").text)

    df=pd.json_normalize(response, max_level=2)

    st.write(df)

    df['year'] = df['year'].map(lambda x: str(x) if pd.notnull(x) else None)
    df['year'] = df['year'].str.split('.').str[0]

    st.write("GET KOIPSE")
    st.write(df)

    #this command is need on our api
    # df['year'] = df['year'].apply(format_year)
    st.write(df)

    df2=pd.json_normalize(response2, max_level=2)
    df2['year'] = df2['year'].map(lambda x: str(x) if pd.notnull(x) else None)
    df2['year'] = df2['year'].str.split('.').str[0]
    
    st.write("GET employement")

    st.write(df2)

    #this command is need on our api

    # df2['year'] = df2['year'].apply(format_year)

    df3=pd.json_normalize(response3, max_level=2)
    df3['year'] = df3['year'].map(lambda x: str(x) if pd.notnull(x) else None)
    df3['year'] = df3['year'].str.split('.').str[0]
    st.write("GET financial")

    st.write(df3)
    
    #this command is need on our api

    # df3['year'] = df3['year'].apply(format_year)

    # st.write(df)
    # st.write(df2)
    # st.write(df3)

    merged=pd.merge(df,df2, left_on=['id', 'year'],right_on=['koispe_id','year'],how='inner')
    merged=pd.merge(merged,df3, left_on=['id', 'year'],right_on=['koispe_id','year'],how='inner')

    # merged= pd.merge(pd.merge(df, df2, on=['koispe_id', 'year']), df3, on=['koispe_id', 'year'])



    st.write(merged)
    merged.rename(columns={'id': 'koispe_id'}, inplace=True)

    ##NOT NEED WHEN ID ON URL EXIST
    # kdata=merged[merged['koispe_id']==int(id)]

    kdata=merged.copy()

    #Our code
    # kdata.drop(columns=['id_x', 'id_y','id'],inplace=True)

    kdata.drop(columns=['uid_x', 'uid_y','uid'],inplace=True)
    st.write(kdata)
    # st.write(kdata)
    ###Start Creating DiktesDataframe
    matching_columns = kdata.columns[kdata.columns.str.startswith("report.kad.81.")]
    print(matching_columns)
    kdata[matching_columns] = kdata[matching_columns].fillna(0)

    matching_columns2 = kdata.columns[kdata.columns.str.startswith("report.kad.56.")]
    kdata[matching_columns2] = kdata[matching_columns2].fillna(0)

    matching_columns3 = kdata.columns[kdata.columns.str.startswith("report.kad.")]
    kdata[matching_columns3] = kdata[matching_columns3].fillna(0)


    # kdata['report.kad.81.21.00.00']=kdata['report.kad.81.21.00.00'].fillna(0)
    # kdata['report.kad.81.30.00.00']= kdata['report.kad.81.30.00.00'].fillna(0)
    # kdata['report.kad.81.29.19.02']=kdata['report.kad.81.29.19.02'].fillna(0)
    # kdata['report.kad.81.29.19.03']=kdata['report.kad.81.29.19.03'].fillna(0)

    # kdata['report.kad.56.10.12.01']=kdata['report.kad.56.10.12.01'].fillna(0)
    # kdata['report.kad.56.10.11.02']= kdata['report.kad.56.10.11.02'].fillna(0)
    # kdata['report.kad.56.10.11.09']= kdata['report.kad.56.10.11.09'].fillna(0)


    st.write(kdata)

    kpdf=get_data_from_json(kdata)
    # kpdf=kpdf.fillna(0)
 

    st.title("Πίνακας Δεικτών")
    st.write(kpdf)
   #Radio button
    ad_expander = st.sidebar.expander("Ανθρώπινο Δυναμικό / Επιχειρηματικότητα",expanded=True)
    with ad_expander:
        selected_option1 = st.radio("Επιλέξτε:", ["Συνεταιριστές","Εργαζόμενοι", "Ώρες Απασχόλησης", "Ετήσιες Μονάδες Εργασίας","Σύνολο κύκλου εργασιών ανά τομέα & κατανομή ανά δραστηριότητα ανά έτος", "% μεταβολής κύκλου εργασιών ανά δραστηριότητα ανά έτος", "Κατανομή πλήθους ΚοιΣΠΕ βάσει προσίμου καθαρών ανά έτος"])
    


    #RADIO OPTION ANTHROPINO DYNAMIKO
    if selected_option1=="Συνεταιριστές":
        ad_button1(id,kpdf,js_code)
    elif selected_option1=="Εργαζόμενοι":
        ad_button2(id,kpdf,js_code)
    elif selected_option1=="Ώρες Απασχόλησης":
        ad_button3(id,kpdf,js_code)
    elif selected_option1=="Ετήσιες Μονάδες Εργασίας":
        ad_button4(id,kpdf,js_code)

    #RADIO OPTION EPIXEIRIMATIKOTITA
    if selected_option1=="Σύνολο κύκλου εργασιών ανά τομέα & κατανομή ανά δραστηριότητα ανά έτος":
        e_button5(id,kpdf,js_code)
    elif selected_option1=="% μεταβολής κύκλου εργασιών ανά δραστηριότητα ανά έτος":
        e_button6(id,kpdf,js_code)
    elif selected_option1=="Κατανομή πλήθους ΚοιΣΠΕ βάσει προσίμου καθαρών ανά έτος":
        e_button7(id,kpdf,js_code)
   


def ad_button1(id,kpdf,js_code):
    st.subheader("Συνεταιριστές")

    year_filter = st.selectbox("Έτος", kpdf['year'].tolist())
    
    with st.container():


        # Display the HTML and JavaScript code
       
        #st.write('Col1 show D1')
        val=kpdf['D1'][kpdf['year']==str(year_filter)].iloc[0]
        # text="Συνεταιριστες Κατηγορια Α: "+str(val)+" 👪" 
        #st.write(kpdf['D1'][kpdf['year']==str(year_filter)])
        st.markdown("<h3 style='text-align: center; color: grey;'>Συνεταιριστές Κατηγορίας Α</h3>", unsafe_allow_html=True)
        # antonis tab
        # html(
        #         f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
        #         <div style="  width:300px; border-radius:10px; background: linear-gradient(45deg, rgba(220,255,89,1) 0%, rgba(255,104,104,1) 100%);">
        #             <div style="font-size:30px; "><p style=" margin:5px; background:white; width:fit-content; border:1px solid transparent; border-radius:50%;">💀</p></div>
        #             <div style="text-align:center;">Συνεταιριστές Κατηγορίας Α</div>
        #             <div style="display: flex; flex-wrap: nowrap; align-items: flex-end;">
        #                 <div id="counter" style="text-align: left; color:white;    font-family: 'Source Sans Pro',sans-serif;font-weight: bold; font-size: 60px;   "></div>
        #                 <div>Συνεταιριστές</div>
        #             </div>
        #         </div>
        #         <script type="text/javascript">
        #         {js_code}
        #         animateCounter("counter", 0, """+str(val)+""", 1000);  // Increase from 0 to 100 in 1 second
        #         </script></body>
        #         """
        #     )





        html(
        f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
      <svg width="329" height="201" viewBox="0 0 329 201" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="329" height="201" rx="15" fill="url(#paint0_linear_21_741)"/>
<p>9</p>
<circle cx="276.895" cy="51.8947" r="27.8947" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M268.94 48.2348C269.84 48.2348 270.703 47.8773 271.34 47.2408C271.976 46.6043 272.334 45.741 272.334 44.8409C272.334 43.9408 271.976 43.0775 271.34 42.441C270.703 41.8045 269.84 41.447 268.94 41.447C268.04 41.447 267.176 41.8045 266.54 42.441C265.903 43.0775 265.546 43.9408 265.546 44.8409C265.546 45.741 265.903 46.6043 266.54 47.2408C267.176 47.8773 268.04 48.2348 268.94 48.2348ZM268.94 49.9318C269.608 49.9318 270.27 49.8001 270.888 49.5443C271.506 49.2885 272.067 48.9135 272.54 48.4407C273.012 47.968 273.387 47.4068 273.643 46.7891C273.899 46.1715 274.031 45.5095 274.031 44.8409C274.031 44.1724 273.899 43.5104 273.643 42.8927C273.387 42.275 273.012 41.7138 272.54 41.2411C272.067 40.7684 271.506 40.3934 270.888 40.1375C270.27 39.8817 269.608 39.75 268.94 39.75C267.59 39.75 266.295 40.2864 265.34 41.2411C264.385 42.1958 263.849 43.4907 263.849 44.8409C263.849 46.1911 264.385 47.486 265.34 48.4407C266.295 49.3955 267.59 49.9318 268.94 49.9318Z" fill="url(#paint1_linear_21_741)"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M266.995 48.0584C267.074 48.1372 267.137 48.2308 267.179 48.3339C267.222 48.437 267.244 48.5475 267.244 48.6591C267.244 48.7707 267.222 48.8812 267.179 48.9843C267.137 49.0874 267.074 49.181 266.995 49.2598L266.421 49.8317C265.318 50.9358 264.697 52.4331 264.697 53.9944V57.1439C264.697 57.369 264.608 57.5848 264.449 57.7439C264.29 57.903 264.074 57.9924 263.849 57.9924C263.624 57.9924 263.408 57.903 263.249 57.7439C263.09 57.5848 263 57.369 263 57.1439V53.9944C263 51.9831 263.799 50.0542 265.222 48.6319L265.793 48.0584C265.872 47.9793 265.966 47.9166 266.069 47.8739C266.172 47.8311 266.283 47.8091 266.394 47.8091C266.506 47.8091 266.616 47.8311 266.719 47.8739C266.822 47.9166 266.916 47.9793 266.995 48.0584ZM287.006 47.5493C286.927 47.6281 286.864 47.7217 286.821 47.8248C286.778 47.9279 286.756 48.0384 286.756 48.15C286.756 48.2616 286.778 48.3721 286.821 48.4752C286.864 48.5783 286.927 48.6719 287.006 48.7507L287.579 49.3226C288.126 49.8693 288.559 50.5182 288.855 51.2325C289.151 51.9467 289.303 52.7122 289.303 53.4853V57.1439C289.303 57.369 289.393 57.5848 289.552 57.7439C289.711 57.903 289.927 57.9924 290.152 57.9924C290.377 57.9924 290.593 57.903 290.752 57.7439C290.911 57.5848 291 57.369 291 57.1439V53.4853C291 51.474 290.201 49.5451 288.779 48.1228L288.207 47.5493C288.128 47.4702 288.035 47.4076 287.932 47.3648C287.828 47.322 287.718 47.3 287.606 47.3C287.495 47.3 287.384 47.322 287.281 47.3648C287.178 47.4076 287.084 47.4702 287.006 47.5493Z" fill="url(#paint2_linear_21_741)"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M284.212 48.2348C283.312 48.2348 282.449 47.8773 281.812 47.2408C281.176 46.6043 280.818 45.741 280.818 44.8409C280.818 43.9408 281.176 43.0775 281.812 42.441C282.449 41.8045 283.312 41.447 284.212 41.447C285.112 41.447 285.976 41.8045 286.612 42.441C287.249 43.0775 287.606 43.9408 287.606 44.8409C287.606 45.741 287.249 46.6043 286.612 47.2408C285.976 47.8773 285.112 48.2348 284.212 48.2348ZM284.212 49.9318C283.544 49.9318 282.882 49.8001 282.264 49.5443C281.646 49.2885 281.085 48.9135 280.612 48.4407C280.14 47.968 279.765 47.4068 279.509 46.7891C279.253 46.1715 279.121 45.5095 279.121 44.8409C279.121 44.1724 279.253 43.5104 279.509 42.8927C279.765 42.275 280.14 41.7138 280.612 41.2411C281.085 40.7684 281.646 40.3934 282.264 40.1375C282.882 39.8817 283.544 39.75 284.212 39.75C285.562 39.75 286.857 40.2864 287.812 41.2411C288.767 42.1958 289.303 43.4907 289.303 44.8409C289.303 46.1911 288.767 47.486 287.812 48.4407C286.857 49.3955 285.562 49.9318 284.212 49.9318ZM276.576 55.447C275.451 55.447 274.372 55.8939 273.576 56.6895C272.78 57.4852 272.333 58.5642 272.333 59.6894V61.8955C272.333 62.1205 272.244 62.3363 272.085 62.4954C271.926 62.6545 271.71 62.7439 271.485 62.7439C271.26 62.7439 271.044 62.6545 270.885 62.4954C270.726 62.3363 270.636 62.1205 270.636 61.8955V59.6894C270.636 58.1142 271.262 56.6035 272.376 55.4896C273.49 54.3758 275.001 53.75 276.576 53.75C278.151 53.75 279.662 54.3758 280.776 55.4896C281.89 56.6035 282.515 58.1142 282.515 59.6894V61.8955C282.515 62.1205 282.426 62.3363 282.267 62.4954C282.108 62.6545 281.892 62.7439 281.667 62.7439C281.442 62.7439 281.226 62.6545 281.067 62.4954C280.908 62.3363 280.818 62.1205 280.818 61.8955V59.6894C280.818 59.1323 280.709 58.5806 280.495 58.0659C280.282 57.5512 279.97 57.0835 279.576 56.6895C279.182 56.2956 278.714 55.9831 278.199 55.7699C277.685 55.5567 277.133 55.447 276.576 55.447Z" fill="url(#paint3_linear_21_741)"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M276.576 52.9015C277.476 52.9015 278.339 52.544 278.976 51.9075C279.612 51.271 279.97 50.4077 279.97 49.5076C279.97 48.6075 279.612 47.7442 278.976 47.1077C278.339 46.4712 277.476 46.1137 276.576 46.1137C275.676 46.1137 274.812 46.4712 274.176 47.1077C273.539 47.7442 273.182 48.6075 273.182 49.5076C273.182 50.4077 273.539 51.271 274.176 51.9075C274.812 52.544 275.676 52.9015 276.576 52.9015ZM276.576 54.5985C277.926 54.5985 279.221 54.0621 280.176 53.1074C281.13 52.1527 281.667 50.8578 281.667 49.5076C281.667 48.1574 281.13 46.8625 280.176 45.9078C279.221 44.953 277.926 44.4167 276.576 44.4167C275.226 44.4167 273.931 44.953 272.976 45.9078C272.021 46.8625 271.485 48.1574 271.485 49.5076C271.485 50.8578 272.021 52.1527 272.976 53.1074C273.931 54.0621 275.226 54.5985 276.576 54.5985Z" fill="url(#paint4_linear_21_741)"/>
<path d="M155.272 139.632C155 139.96 154.732 140.276 154.468 140.58C154.212 140.884 153.96 141.184 153.712 141.48C153.464 141.776 153.224 142.072 152.992 142.368C152.76 142.664 152.536 142.972 152.32 143.292H157.132V144H151.456V143.304C151.6 143.064 151.78 142.804 151.996 142.524C152.212 142.236 152.448 141.936 152.704 141.624C152.96 141.304 153.224 140.98 153.496 140.652C153.776 140.316 154.048 139.98 154.312 139.644C154.056 139.316 153.792 138.992 153.52 138.672C153.256 138.344 153.004 138.032 152.764 137.736C152.524 137.44 152.3 137.168 152.092 136.92C151.892 136.664 151.732 136.444 151.612 136.26V135.684H157.108V136.392H152.68C152.776 136.544 152.916 136.736 153.1 136.968C153.292 137.2 153.508 137.46 153.748 137.748C153.988 138.036 154.24 138.344 154.504 138.672C154.768 138.992 155.024 139.312 155.272 139.632ZM160.429 144.132C159.965 144.132 159.577 144.064 159.265 143.928C158.953 143.784 158.701 143.592 158.509 143.352C158.317 143.104 158.181 142.812 158.101 142.476C158.021 142.132 157.981 141.76 157.981 141.36V137.796H158.761V141.288C158.761 141.68 158.797 142.012 158.869 142.284C158.949 142.548 159.057 142.764 159.193 142.932C159.337 143.1 159.513 143.224 159.721 143.304C159.929 143.376 160.165 143.412 160.429 143.412C160.693 143.412 160.929 143.376 161.137 143.304C161.345 143.224 161.517 143.1 161.653 142.932C161.797 142.764 161.905 142.548 161.977 142.284C162.057 142.012 162.097 141.68 162.097 141.288V137.796H162.877V141.36C162.877 141.76 162.837 142.132 162.757 142.476C162.677 142.812 162.541 143.104 162.349 143.352C162.157 143.592 161.905 143.784 161.593 143.928C161.281 144.064 160.893 144.132 160.429 144.132ZM161.041 134.676L161.725 135.144L160.177 137.1L159.697 136.752L161.041 134.676ZM166.145 143.16C166.313 142.816 166.485 142.424 166.661 141.984C166.837 141.536 167.005 141.076 167.165 140.604C167.333 140.124 167.485 139.644 167.621 139.164C167.765 138.676 167.885 138.22 167.981 137.796H168.761C168.617 138.364 168.457 138.924 168.281 139.476C168.105 140.028 167.917 140.568 167.717 141.096C167.525 141.624 167.321 142.132 167.105 142.62C166.897 143.108 166.693 143.568 166.493 144H165.749C165.541 143.568 165.333 143.108 165.125 142.62C164.917 142.132 164.713 141.624 164.513 141.096C164.321 140.568 164.137 140.028 163.961 139.476C163.785 138.924 163.625 138.364 163.481 137.796H164.309C164.405 138.22 164.521 138.676 164.657 139.164C164.801 139.644 164.953 140.124 165.113 140.604C165.281 141.076 165.453 141.536 165.629 141.984C165.805 142.424 165.977 142.816 166.145 143.16ZM174.731 140.904C174.731 141.392 174.659 141.836 174.515 142.236C174.379 142.636 174.183 142.976 173.927 143.256C173.679 143.536 173.383 143.756 173.039 143.916C172.695 144.068 172.315 144.144 171.899 144.144C171.483 144.144 171.103 144.068 170.759 143.916C170.415 143.756 170.115 143.536 169.859 143.256C169.611 142.976 169.415 142.636 169.271 142.236C169.135 141.836 169.067 141.392 169.067 140.904C169.067 140.416 169.135 139.972 169.271 139.572C169.415 139.172 169.611 138.832 169.859 138.552C170.115 138.264 170.415 138.044 170.759 137.892C171.103 137.732 171.483 137.652 171.899 137.652C172.315 137.652 172.695 137.732 173.039 137.892C173.383 138.044 173.679 138.264 173.927 138.552C174.183 138.832 174.379 139.172 174.515 139.572C174.659 139.972 174.731 140.416 174.731 140.904ZM173.903 140.904C173.903 140.128 173.723 139.512 173.363 139.056C173.003 138.592 172.515 138.36 171.899 138.36C171.283 138.36 170.795 138.592 170.435 139.056C170.075 139.512 169.895 140.128 169.895 140.904C169.895 141.68 170.075 142.296 170.435 142.752C170.795 143.208 171.283 143.436 171.899 143.436C172.515 143.436 173.003 143.208 173.363 142.752C173.723 142.296 173.903 141.68 173.903 140.904ZM177.911 138.54C177.367 139.564 176.923 140.552 176.579 141.504C176.243 142.448 175.987 143.28 175.811 144H175.019C175.115 143.608 175.247 143.156 175.415 142.644C175.591 142.124 175.791 141.584 176.015 141.024C176.247 140.456 176.495 139.888 176.759 139.32C177.031 138.744 177.307 138.2 177.587 137.688C177.523 137.528 177.463 137.372 177.407 137.22C177.351 137.068 177.295 136.928 177.239 136.8C177.111 136.512 176.999 136.276 176.903 136.092C176.807 135.9 176.707 135.752 176.603 135.648C176.499 135.536 176.383 135.46 176.255 135.42C176.127 135.38 175.967 135.36 175.775 135.36C175.663 135.36 175.567 135.372 175.487 135.396C175.415 135.412 175.359 135.428 175.319 135.444L175.187 134.796C175.251 134.772 175.347 134.748 175.475 134.724C175.603 134.7 175.755 134.688 175.931 134.688C176.211 134.688 176.451 134.736 176.651 134.832C176.859 134.92 177.035 135.04 177.179 135.192C177.323 135.344 177.447 135.516 177.551 135.708C177.655 135.892 177.747 136.084 177.827 136.284C178.427 137.764 178.931 139.136 179.339 140.4C179.755 141.656 180.123 142.856 180.443 144H179.627C179.419 143.16 179.163 142.268 178.859 141.324C178.563 140.38 178.247 139.452 177.911 138.54ZM186.422 140.904C186.422 141.392 186.35 141.836 186.206 142.236C186.07 142.636 185.874 142.976 185.618 143.256C185.37 143.536 185.074 143.756 184.73 143.916C184.386 144.068 184.006 144.144 183.59 144.144C183.174 144.144 182.794 144.068 182.45 143.916C182.106 143.756 181.806 143.536 181.55 143.256C181.302 142.976 181.106 142.636 180.962 142.236C180.826 141.836 180.758 141.392 180.758 140.904C180.758 140.416 180.826 139.972 180.962 139.572C181.106 139.172 181.302 138.832 181.55 138.552C181.806 138.264 182.106 138.044 182.45 137.892C182.794 137.732 183.174 137.652 183.59 137.652C184.006 137.652 184.386 137.732 184.73 137.892C185.074 138.044 185.37 138.264 185.618 138.552C185.874 138.832 186.07 139.172 186.206 139.572C186.35 139.972 186.422 140.416 186.422 140.904ZM185.594 140.904C185.594 140.128 185.414 139.512 185.054 139.056C184.694 138.592 184.206 138.36 183.59 138.36C182.974 138.36 182.486 138.592 182.126 139.056C181.766 139.512 181.586 140.128 181.586 140.904C181.586 141.68 181.766 142.296 182.126 142.752C182.486 143.208 182.974 143.436 183.59 143.436C184.206 143.436 184.694 143.208 185.054 142.752C185.414 142.296 185.594 141.68 185.594 140.904ZM189.692 144V135.684H194.492V136.392H190.508V139.284H194.06V139.98H190.508V143.292H194.804V144H189.692ZM198.161 144.144C197.737 144.144 197.373 144.088 197.069 143.976C196.765 143.856 196.545 143.744 196.409 143.64V146.22H195.629V140.52C195.629 140.088 195.681 139.7 195.785 139.356C195.889 139.004 196.049 138.704 196.265 138.456C196.481 138.208 196.749 138.016 197.069 137.88C197.397 137.744 197.781 137.676 198.221 137.676C199.141 137.676 199.845 137.944 200.333 138.48C200.821 139.008 201.065 139.816 201.065 140.904C201.065 141.36 201.001 141.788 200.873 142.188C200.753 142.58 200.573 142.924 200.333 143.22C200.093 143.508 199.789 143.736 199.421 143.904C199.061 144.064 198.641 144.144 198.161 144.144ZM196.409 142.884C196.641 143.068 196.901 143.208 197.189 143.304C197.485 143.392 197.789 143.436 198.101 143.436C198.509 143.436 198.849 143.364 199.121 143.22C199.393 143.076 199.613 142.888 199.781 142.656C199.949 142.424 200.065 142.156 200.129 141.852C200.201 141.548 200.237 141.236 200.237 140.916C200.237 140.54 200.201 140.196 200.129 139.884C200.065 139.572 199.953 139.308 199.793 139.092C199.641 138.868 199.433 138.696 199.169 138.576C198.913 138.456 198.597 138.396 198.221 138.396C197.621 138.396 197.169 138.58 196.865 138.948C196.561 139.316 196.409 139.904 196.409 140.712V142.884ZM203.693 143.232C203.917 142.88 204.133 142.472 204.341 142.008C204.557 141.544 204.753 141.064 204.929 140.568C205.113 140.072 205.273 139.584 205.409 139.104C205.545 138.616 205.645 138.18 205.709 137.796H206.453C206.381 138.18 206.281 138.616 206.153 139.104C206.025 139.592 205.857 140.108 205.649 140.652C205.449 141.196 205.201 141.764 204.905 142.356C204.617 142.94 204.277 143.524 203.885 144.108C203.949 144.452 204.001 144.796 204.041 145.14C204.081 145.484 204.113 145.844 204.137 146.22H203.393C203.369 145.764 203.313 145.272 203.225 144.744C203.137 144.224 203.029 143.692 202.901 143.148C202.781 142.604 202.645 142.068 202.493 141.54C202.349 141.004 202.201 140.5 202.049 140.028C201.905 139.556 201.765 139.128 201.629 138.744C201.493 138.36 201.373 138.044 201.269 137.796H202.133C202.253 138.1 202.381 138.472 202.517 138.912C202.661 139.344 202.805 139.808 202.949 140.304C203.093 140.792 203.229 141.292 203.357 141.804C203.485 142.308 203.597 142.784 203.693 143.232ZM211.514 143.508C211.314 143.668 211.062 143.812 210.758 143.94C210.462 144.068 210.098 144.132 209.666 144.132C209.178 144.132 208.75 144.048 208.382 143.88C208.022 143.712 207.722 143.484 207.482 143.196C207.242 142.908 207.062 142.568 206.942 142.176C206.822 141.784 206.762 141.364 206.762 140.916C206.762 140.404 206.834 139.948 206.978 139.548C207.13 139.14 207.342 138.8 207.614 138.528C207.894 138.248 208.226 138.036 208.61 137.892C208.994 137.748 209.422 137.676 209.894 137.676C210.134 137.676 210.362 137.692 210.578 137.724C210.802 137.748 211.006 137.78 211.19 137.82C211.382 137.852 211.546 137.892 211.682 137.94C211.826 137.98 211.938 138.016 212.018 138.048V142.476C212.018 142.676 212.038 142.836 212.078 142.956C212.118 143.068 212.178 143.16 212.258 143.232C212.338 143.296 212.438 143.344 212.558 143.376C212.678 143.408 212.818 143.436 212.978 143.46L212.87 144.108C212.222 144.084 211.77 143.884 211.514 143.508ZM211.238 138.588C211.214 138.58 211.162 138.564 211.082 138.54C211.002 138.516 210.902 138.492 210.782 138.468C210.67 138.444 210.542 138.424 210.398 138.408C210.254 138.392 210.106 138.384 209.954 138.384C209.21 138.384 208.63 138.6 208.214 139.032C207.798 139.464 207.59 140.092 207.59 140.916C207.59 141.252 207.622 141.572 207.686 141.876C207.758 142.172 207.874 142.436 208.034 142.668C208.202 142.9 208.418 143.084 208.682 143.22C208.946 143.356 209.274 143.424 209.666 143.424C209.858 143.424 210.042 143.404 210.218 143.364C210.394 143.324 210.55 143.276 210.686 143.22C210.83 143.164 210.954 143.104 211.058 143.04C211.162 142.976 211.242 142.92 211.298 142.872C211.258 142.696 211.238 142.508 211.238 142.308V138.588ZM217.977 144.672C217.977 144.824 217.957 144.976 217.917 145.128C217.877 145.288 217.825 145.436 217.761 145.572C217.705 145.716 217.641 145.848 217.569 145.968C217.497 146.088 217.433 146.184 217.377 146.256L216.729 145.992C216.753 145.96 216.793 145.904 216.849 145.824C216.905 145.744 216.957 145.652 217.005 145.548C217.061 145.444 217.109 145.328 217.149 145.2C217.189 145.08 217.209 144.956 217.209 144.828C217.209 144.66 217.177 144.524 217.113 144.42C217.057 144.316 216.965 144.224 216.837 144.144C216.709 144.072 216.541 144.012 216.333 143.964C216.133 143.908 215.889 143.848 215.601 143.784C215.169 143.696 214.809 143.584 214.521 143.448C214.233 143.312 214.001 143.144 213.825 142.944C213.657 142.744 213.533 142.508 213.453 142.236C213.381 141.956 213.345 141.624 213.345 141.24C213.345 140.824 213.405 140.412 213.525 140.004C213.653 139.596 213.817 139.2 214.017 138.816C214.217 138.432 214.445 138.068 214.701 137.724C214.957 137.38 215.213 137.064 215.469 136.776C215.725 136.488 215.969 136.232 216.201 136.008C216.441 135.776 216.645 135.584 216.813 135.432H213.729V134.772H217.749V135.408C217.573 135.568 217.361 135.772 217.113 136.02C216.865 136.26 216.609 136.532 216.345 136.836C216.081 137.132 215.817 137.456 215.553 137.808C215.297 138.152 215.065 138.516 214.857 138.9C214.657 139.276 214.493 139.664 214.365 140.064C214.237 140.456 214.173 140.848 214.173 141.24C214.173 141.552 214.205 141.816 214.269 142.032C214.341 142.24 214.449 142.416 214.593 142.56C214.745 142.696 214.941 142.808 215.181 142.896C215.421 142.984 215.713 143.064 216.057 143.136C216.401 143.208 216.693 143.284 216.933 143.364C217.181 143.444 217.381 143.544 217.533 143.664C217.693 143.776 217.805 143.912 217.869 144.072C217.941 144.232 217.977 144.432 217.977 144.672ZM223.39 140.904C223.39 141.392 223.318 141.836 223.174 142.236C223.038 142.636 222.842 142.976 222.586 143.256C222.338 143.536 222.042 143.756 221.698 143.916C221.354 144.068 220.974 144.144 220.558 144.144C220.142 144.144 219.762 144.068 219.418 143.916C219.074 143.756 218.774 143.536 218.518 143.256C218.27 142.976 218.074 142.636 217.93 142.236C217.794 141.836 217.726 141.392 217.726 140.904C217.726 140.416 217.794 139.972 217.93 139.572C218.074 139.172 218.27 138.832 218.518 138.552C218.774 138.264 219.074 138.044 219.418 137.892C219.762 137.732 220.142 137.652 220.558 137.652C220.974 137.652 221.354 137.732 221.698 137.892C222.042 138.044 222.338 138.264 222.586 138.552C222.842 138.832 223.038 139.172 223.174 139.572C223.318 139.972 223.39 140.416 223.39 140.904ZM222.562 140.904C222.562 140.128 222.382 139.512 222.022 139.056C221.662 138.592 221.174 138.36 220.558 138.36C219.942 138.36 219.454 138.592 219.094 139.056C218.734 139.512 218.554 140.128 218.554 140.904C218.554 141.68 218.734 142.296 219.094 142.752C219.454 143.208 219.942 143.436 220.558 143.436C221.174 143.436 221.662 143.208 222.022 142.752C222.382 142.296 222.562 141.68 222.562 140.904ZM226.942 144.12C226.486 144.12 226.118 144.06 225.838 143.94C225.558 143.82 225.338 143.656 225.178 143.448C225.21 143.704 225.226 143.96 225.226 144.216C225.234 144.48 225.238 144.724 225.238 144.948V146.22H224.482V137.796H225.262V141.024C225.262 141.464 225.294 141.836 225.358 142.14C225.422 142.444 225.526 142.692 225.67 142.884C225.814 143.068 225.998 143.204 226.222 143.292C226.454 143.372 226.734 143.412 227.062 143.412C227.43 143.412 227.75 143.392 228.022 143.352C228.294 143.312 228.466 143.276 228.538 143.244V137.796H229.318V143.784C229.086 143.848 228.774 143.92 228.382 144C227.99 144.08 227.51 144.12 226.942 144.12ZM233.028 143.436C233.276 143.436 233.508 143.42 233.724 143.388C233.948 143.356 234.144 143.316 234.312 143.268C234.488 143.22 234.636 143.172 234.756 143.124C234.884 143.068 234.972 143.024 235.02 142.992L235.272 143.676C235.208 143.716 235.108 143.764 234.972 143.82C234.844 143.868 234.68 143.916 234.48 143.964C234.288 144.012 234.068 144.052 233.82 144.084C233.572 144.124 233.304 144.144 233.016 144.144C232.192 144.136 231.552 143.984 231.096 143.688C230.648 143.392 230.424 142.952 230.424 142.368C230.424 141.888 230.54 141.52 230.772 141.264C231.012 141 231.328 140.812 231.72 140.7C231.44 140.612 231.192 140.46 230.976 140.244C230.768 140.02 230.664 139.732 230.664 139.38C230.664 138.812 230.876 138.384 231.3 138.096C231.732 137.808 232.344 137.664 233.136 137.664C233.6 137.664 233.988 137.7 234.3 137.772C234.612 137.844 234.824 137.908 234.936 137.964L234.756 138.66C234.66 138.62 234.476 138.56 234.204 138.48C233.932 138.392 233.568 138.348 233.112 138.348C232.912 138.348 232.712 138.364 232.512 138.396C232.312 138.428 232.132 138.484 231.972 138.564C231.82 138.644 231.696 138.752 231.6 138.888C231.504 139.024 231.456 139.196 231.456 139.404C231.456 139.628 231.512 139.808 231.624 139.944C231.744 140.072 231.884 140.172 232.044 140.244C232.212 140.316 232.388 140.364 232.572 140.388C232.756 140.404 232.916 140.412 233.052 140.412H233.856V141.072H232.992C232.824 141.072 232.636 141.088 232.428 141.12C232.228 141.144 232.036 141.2 231.852 141.288C231.676 141.376 231.528 141.5 231.408 141.66C231.288 141.82 231.228 142.036 231.228 142.308C231.228 142.684 231.388 142.968 231.708 143.16C232.028 143.344 232.468 143.436 233.028 143.436ZM233.472 134.676L234.156 135.144L232.608 137.1L232.128 136.752L233.472 134.676ZM238.033 143.16C238.201 142.816 238.373 142.424 238.549 141.984C238.725 141.536 238.893 141.076 239.053 140.604C239.221 140.124 239.373 139.644 239.509 139.164C239.653 138.676 239.773 138.22 239.869 137.796H240.649C240.505 138.364 240.345 138.924 240.169 139.476C239.993 140.028 239.805 140.568 239.605 141.096C239.413 141.624 239.209 142.132 238.993 142.62C238.785 143.108 238.581 143.568 238.381 144H237.637C237.429 143.568 237.221 143.108 237.013 142.62C236.805 142.132 236.601 141.624 236.401 141.096C236.209 140.568 236.025 140.028 235.849 139.476C235.673 138.924 235.513 138.364 235.369 137.796H236.197C236.293 138.22 236.409 138.676 236.545 139.164C236.689 139.644 236.841 140.124 237.001 140.604C237.169 141.076 237.341 141.536 237.517 141.984C237.693 142.424 237.865 142.816 238.033 143.16ZM245.695 138.96V140.748C245.695 140.988 245.703 141.26 245.719 141.564C245.743 141.86 245.803 142.144 245.899 142.416C245.995 142.688 246.139 142.916 246.331 143.1C246.531 143.284 246.807 143.376 247.159 143.376C247.679 143.376 248.075 143.188 248.347 142.812C248.619 142.428 248.755 141.824 248.755 141C248.755 140.592 248.707 140.216 248.611 139.872C248.523 139.528 248.419 139.228 248.299 138.972C248.179 138.708 248.063 138.492 247.951 138.324C247.839 138.156 247.763 138.04 247.723 137.976L248.431 137.676C248.487 137.748 248.579 137.884 248.707 138.084C248.835 138.276 248.963 138.516 249.091 138.804C249.219 139.092 249.331 139.424 249.427 139.8C249.523 140.176 249.571 140.584 249.571 141.024C249.571 141.584 249.511 142.06 249.391 142.452C249.271 142.844 249.103 143.164 248.887 143.412C248.679 143.652 248.427 143.828 248.131 143.94C247.843 144.052 247.523 144.108 247.171 144.108C246.755 144.108 246.387 144.02 246.067 143.844C245.747 143.66 245.491 143.34 245.299 142.884C245.107 143.34 244.851 143.66 244.531 143.844C244.219 144.02 243.855 144.108 243.439 144.108C243.087 144.108 242.763 144.052 242.467 143.94C242.179 143.828 241.927 143.652 241.711 143.412C241.503 143.164 241.339 142.844 241.219 142.452C241.099 142.06 241.039 141.584 241.039 141.024C241.039 140.584 241.087 140.176 241.183 139.8C241.279 139.424 241.391 139.092 241.519 138.804C241.647 138.516 241.775 138.276 241.903 138.084C242.031 137.884 242.123 137.748 242.179 137.676L242.887 137.976C242.847 138.04 242.771 138.156 242.659 138.324C242.547 138.492 242.431 138.708 242.311 138.972C242.191 139.228 242.083 139.528 241.987 139.872C241.899 140.216 241.855 140.592 241.855 141C241.855 141.824 241.991 142.428 242.263 142.812C242.535 143.188 242.931 143.376 243.451 143.376C243.803 143.376 244.075 143.284 244.267 143.1C244.467 142.916 244.615 142.688 244.711 142.416C244.807 142.144 244.863 141.86 244.879 141.564C244.903 141.26 244.915 140.988 244.915 140.748V138.96H245.695ZM252.618 143.16C252.786 142.816 252.958 142.424 253.134 141.984C253.31 141.536 253.478 141.076 253.638 140.604C253.806 140.124 253.958 139.644 254.094 139.164C254.238 138.676 254.358 138.22 254.454 137.796H255.234C255.09 138.364 254.93 138.924 254.754 139.476C254.578 140.028 254.39 140.568 254.19 141.096C253.998 141.624 253.794 142.132 253.578 142.62C253.37 143.108 253.166 143.568 252.966 144H252.222C252.014 143.568 251.806 143.108 251.598 142.62C251.39 142.132 251.186 141.624 250.986 141.096C250.794 140.568 250.61 140.028 250.434 139.476C250.258 138.924 250.098 138.364 249.954 137.796H250.782C250.878 138.22 250.994 138.676 251.13 139.164C251.274 139.644 251.426 140.124 251.586 140.604C251.754 141.076 251.926 141.536 252.102 141.984C252.278 142.424 252.45 142.816 252.618 143.16Z" fill="#8E8D8D"/>
<path d="M162.136 160.368V161.784H154.792V177H153.16V160.368H162.136ZM165.469 175.872C165.965 175.872 166.429 175.84 166.861 175.776C167.309 175.712 167.701 175.632 168.037 175.536C168.389 175.44 168.685 175.344 168.925 175.248C169.181 175.136 169.357 175.048 169.453 174.984L169.957 176.352C169.829 176.432 169.629 176.528 169.357 176.64C169.101 176.736 168.773 176.832 168.373 176.928C167.989 177.024 167.549 177.104 167.053 177.168C166.557 177.248 166.021 177.288 165.445 177.288C163.797 177.272 162.517 176.968 161.605 176.376C160.709 175.784 160.261 174.904 160.261 173.736C160.261 172.776 160.493 172.04 160.957 171.528C161.437 171 162.069 170.624 162.853 170.4C162.293 170.224 161.797 169.92 161.365 169.488C160.949 169.04 160.741 168.464 160.741 167.76C160.741 166.624 161.165 165.768 162.013 165.192C162.877 164.616 164.101 164.328 165.685 164.328C166.613 164.328 167.389 164.4 168.013 164.544C168.637 164.688 169.061 164.816 169.285 164.928L168.925 166.32C168.733 166.24 168.365 166.12 167.821 165.96C167.277 165.784 166.549 165.696 165.637 165.696C165.237 165.696 164.837 165.728 164.437 165.792C164.037 165.856 163.677 165.968 163.357 166.128C163.053 166.288 162.805 166.504 162.613 166.776C162.421 167.048 162.325 167.392 162.325 167.808C162.325 168.256 162.437 168.616 162.661 168.888C162.901 169.144 163.181 169.344 163.501 169.488C163.837 169.632 164.189 169.728 164.557 169.776C164.925 169.808 165.245 169.824 165.517 169.824H167.125V171.144H165.397C165.061 171.144 164.685 171.176 164.269 171.24C163.869 171.288 163.485 171.4 163.117 171.576C162.765 171.752 162.469 172 162.229 172.32C161.989 172.64 161.869 173.072 161.869 173.616C161.869 174.368 162.189 174.936 162.829 175.32C163.469 175.688 164.349 175.872 165.469 175.872ZM175.478 175.32C175.814 174.632 176.158 173.848 176.51 172.968C176.862 172.072 177.198 171.152 177.518 170.208C177.854 169.248 178.158 168.288 178.43 167.328C178.718 166.352 178.958 165.44 179.15 164.592H180.71C180.422 165.728 180.102 166.848 179.75 167.952C179.398 169.056 179.022 170.136 178.622 171.192C178.238 172.248 177.83 173.264 177.398 174.24C176.982 175.216 176.574 176.136 176.174 177H174.686C174.27 176.136 173.854 175.216 173.438 174.24C173.022 173.264 172.614 172.248 172.214 171.192C171.83 170.136 171.462 169.056 171.11 167.952C170.758 166.848 170.438 165.728 170.15 164.592H171.806C171.998 165.44 172.23 166.352 172.502 167.328C172.79 168.288 173.094 169.248 173.414 170.208C173.75 171.152 174.094 172.072 174.446 172.968C174.798 173.848 175.142 174.632 175.478 175.32ZM183.688 175.968C183.688 176.336 183.568 176.648 183.328 176.904C183.104 177.16 182.784 177.288 182.368 177.288C181.952 177.288 181.624 177.16 181.384 176.904C181.16 176.648 181.048 176.336 181.048 175.968C181.048 175.6 181.16 175.288 181.384 175.032C181.624 174.776 181.952 174.648 182.368 174.648C182.784 174.648 183.104 174.776 183.328 175.032C183.568 175.288 183.688 175.6 183.688 175.968ZM202.663 160.368V177H201.031V161.784H192.175V177H190.543V160.368H202.663ZM209.852 166.08C208.764 168.128 207.876 170.104 207.188 172.008C206.516 173.896 206.004 175.56 205.652 177H204.068C204.26 176.216 204.524 175.312 204.86 174.288C205.212 173.248 205.612 172.168 206.06 171.048C206.524 169.912 207.02 168.776 207.548 167.64C208.092 166.488 208.644 165.4 209.204 164.376C209.076 164.056 208.956 163.744 208.844 163.44C208.732 163.136 208.62 162.856 208.508 162.6C208.252 162.024 208.028 161.552 207.836 161.184C207.644 160.8 207.444 160.504 207.236 160.296C207.028 160.072 206.796 159.92 206.54 159.84C206.284 159.76 205.964 159.72 205.58 159.72C205.356 159.72 205.164 159.744 205.004 159.792C204.86 159.824 204.748 159.856 204.668 159.888L204.404 158.592C204.532 158.544 204.724 158.496 204.98 158.448C205.236 158.4 205.54 158.376 205.892 158.376C206.452 158.376 206.932 158.472 207.332 158.664C207.748 158.84 208.1 159.08 208.388 159.384C208.676 159.688 208.924 160.032 209.132 160.416C209.34 160.784 209.524 161.168 209.684 161.568C210.884 164.528 211.892 167.272 212.708 169.8C213.54 172.312 214.276 174.712 214.916 177H213.284C212.868 175.32 212.356 173.536 211.748 171.648C211.156 169.76 210.524 167.904 209.852 166.08ZM216.289 165.024C216.753 164.896 217.377 164.752 218.161 164.592C218.945 164.432 219.905 164.352 221.041 164.352C221.985 164.352 222.769 164.488 223.393 164.76C224.033 165.032 224.537 165.424 224.905 165.936C225.289 166.432 225.561 167.032 225.721 167.736C225.881 168.44 225.961 169.216 225.961 170.064V181.44H224.401V170.568C224.401 169.688 224.337 168.944 224.209 168.336C224.097 167.728 223.897 167.232 223.609 166.848C223.337 166.464 222.969 166.192 222.505 166.032C222.057 165.856 221.489 165.768 220.801 165.768C220.065 165.768 219.425 165.808 218.881 165.888C218.353 165.968 218.009 166.04 217.849 166.104V177H216.289V165.024ZM233.794 158.376C234.77 158.376 235.618 158.608 236.338 159.072C237.058 159.536 237.65 160.192 238.114 161.04C238.578 161.872 238.922 162.872 239.146 164.04C239.386 165.192 239.506 166.464 239.506 167.856C239.506 169.248 239.386 170.528 239.146 171.696C238.922 172.848 238.578 173.848 238.114 174.696C237.65 175.528 237.058 176.176 236.338 176.64C235.618 177.104 234.77 177.336 233.794 177.336C232.818 177.336 231.97 177.104 231.25 176.64C230.53 176.176 229.938 175.528 229.474 174.696C229.01 173.848 228.658 172.848 228.418 171.696C228.194 170.528 228.082 169.248 228.082 167.856C228.082 166.464 228.194 165.192 228.418 164.04C228.658 162.872 229.01 161.872 229.474 161.04C229.938 160.192 230.53 159.536 231.25 159.072C231.97 158.608 232.818 158.376 233.794 158.376ZM233.794 175.92C235.154 175.92 236.162 175.256 236.818 173.928C237.474 172.584 237.826 170.728 237.874 168.36H229.714C229.73 169.544 229.818 170.608 229.978 171.552C230.154 172.48 230.41 173.272 230.746 173.928C231.082 174.568 231.498 175.064 231.994 175.416C232.506 175.752 233.106 175.92 233.794 175.92ZM233.794 159.792C232.45 159.792 231.45 160.44 230.794 161.736C230.138 163.016 229.778 164.784 229.714 167.04H237.85C237.786 164.784 237.426 163.016 236.77 161.736C236.114 160.44 235.122 159.792 233.794 159.792ZM246.532 177.264C245.604 177.264 244.828 177.128 244.204 176.856C243.58 176.568 243.076 176.184 242.692 175.704C242.308 175.208 242.036 174.624 241.876 173.952C241.716 173.264 241.636 172.52 241.636 171.72V164.592H243.196V171.576C243.196 172.36 243.268 173.024 243.412 173.568C243.572 174.096 243.788 174.528 244.06 174.864C244.348 175.2 244.7 175.448 245.116 175.608C245.532 175.752 246.004 175.824 246.532 175.824C247.06 175.824 247.532 175.752 247.948 175.608C248.364 175.448 248.708 175.2 248.98 174.864C249.268 174.528 249.484 174.096 249.628 173.568C249.788 173.024 249.868 172.36 249.868 171.576V164.592H251.428V171.72C251.428 172.52 251.348 173.264 251.188 173.952C251.028 174.624 250.756 175.208 250.372 175.704C249.988 176.184 249.484 176.568 248.86 176.856C248.236 177.128 247.46 177.264 246.532 177.264ZM264.684 171.336C264.684 172.28 264.548 173.12 264.276 173.856C264.004 174.592 263.62 175.216 263.124 175.728C262.628 176.24 262.036 176.632 261.348 176.904C260.676 177.16 259.924 177.288 259.092 177.288C258.308 177.288 257.572 177.152 256.884 176.88C256.196 176.608 255.596 176.216 255.084 175.704C254.588 175.176 254.196 174.544 253.908 173.808C253.62 173.056 253.476 172.208 253.476 171.264C253.476 170 253.668 168.944 254.052 168.096C254.452 167.248 254.964 166.568 255.588 166.056C256.212 165.528 256.916 165.152 257.7 164.928C258.484 164.704 259.276 164.592 260.076 164.592H266.244V165.912H262.524C262.78 166.2 263.036 166.536 263.292 166.92C263.564 167.304 263.796 167.728 263.988 168.192C264.196 168.64 264.364 169.128 264.492 169.656C264.62 170.184 264.684 170.744 264.684 171.336ZM263.052 171.384C263.052 170.296 262.836 169.264 262.404 168.288C261.972 167.312 261.404 166.52 260.7 165.912H259.956C259.572 165.912 259.108 165.968 258.564 166.08C258.02 166.192 257.492 166.44 256.98 166.824C256.468 167.192 256.028 167.728 255.66 168.432C255.308 169.136 255.132 170.08 255.132 171.264C255.132 171.984 255.228 172.632 255.42 173.208C255.628 173.768 255.908 174.248 256.26 174.648C256.612 175.048 257.028 175.352 257.508 175.56C257.988 175.768 258.516 175.872 259.092 175.872C260.324 175.872 261.292 175.488 261.996 174.72C262.7 173.952 263.052 172.84 263.052 171.384ZM272.518 177.24C271.606 177.24 270.87 177.12 270.31 176.88C269.75 176.64 269.31 176.312 268.99 175.896C269.054 176.408 269.086 176.92 269.086 177.432C269.102 177.96 269.11 178.448 269.11 178.896V181.44H267.598V164.592H269.158V171.048C269.158 171.928 269.222 172.672 269.35 173.28C269.478 173.888 269.686 174.384 269.974 174.768C270.262 175.136 270.63 175.408 271.078 175.584C271.542 175.744 272.102 175.824 272.758 175.824C273.494 175.824 274.134 175.784 274.678 175.704C275.222 175.624 275.566 175.552 275.71 175.488V164.592H277.27V176.568C276.806 176.696 276.182 176.84 275.398 177C274.614 177.16 273.654 177.24 272.518 177.24ZM290.787 170.808C290.787 171.784 290.643 172.672 290.355 173.472C290.083 174.272 289.691 174.952 289.179 175.512C288.683 176.072 288.091 176.512 287.403 176.832C286.715 177.136 285.955 177.288 285.123 177.288C284.291 177.288 283.531 177.136 282.843 176.832C282.155 176.512 281.555 176.072 281.043 175.512C280.547 174.952 280.155 174.272 279.867 173.472C279.595 172.672 279.459 171.784 279.459 170.808C279.459 169.832 279.595 168.944 279.867 168.144C280.155 167.344 280.547 166.664 281.043 166.104C281.555 165.528 282.155 165.088 282.843 164.784C283.531 164.464 284.291 164.304 285.123 164.304C285.955 164.304 286.715 164.464 287.403 164.784C288.091 165.088 288.683 165.528 289.179 166.104C289.691 166.664 290.083 167.344 290.355 168.144C290.643 168.944 290.787 169.832 290.787 170.808ZM289.131 170.808C289.131 169.256 288.771 168.024 288.051 167.112C287.331 166.184 286.355 165.72 285.123 165.72C283.891 165.72 282.915 166.184 282.195 167.112C281.475 168.024 281.115 169.256 281.115 170.808C281.115 172.36 281.475 173.592 282.195 174.504C282.915 175.416 283.891 175.872 285.123 175.872C286.355 175.872 287.331 175.416 288.051 174.504C288.771 173.592 289.131 172.36 289.131 170.808ZM297.724 177.264C296.796 177.264 296.02 177.128 295.396 176.856C294.772 176.568 294.268 176.184 293.884 175.704C293.5 175.208 293.228 174.624 293.068 173.952C292.908 173.264 292.828 172.52 292.828 171.72V164.592H294.388V171.576C294.388 172.36 294.46 173.024 294.604 173.568C294.764 174.096 294.98 174.528 295.252 174.864C295.54 175.2 295.892 175.448 296.308 175.608C296.724 175.752 297.196 175.824 297.724 175.824C298.252 175.824 298.724 175.752 299.14 175.608C299.556 175.448 299.9 175.2 300.172 174.864C300.46 174.528 300.676 174.096 300.82 173.568C300.98 173.024 301.06 172.36 301.06 171.576V164.592H302.62V171.72C302.62 172.52 302.54 173.264 302.38 173.952C302.22 174.624 301.948 175.208 301.564 175.704C301.18 176.184 300.676 176.568 300.052 176.856C299.428 177.128 298.652 177.264 297.724 177.264ZM298.948 158.352L300.316 159.288L297.22 163.2L296.26 162.504L298.948 158.352Z" fill="#6E7279"/>
<defs>
<linearGradient id="paint0_linear_21_741" x1="40.5294" y1="12.9701" x2="239.942" y2="370.693" gradientUnits="userSpaceOnUse">
<stop stop-color="#C7D7F4" stop-opacity="0.56"/>
<stop offset="1" stop-color="#60EFFF" stop-opacity="0.55"/>
</linearGradient>
<linearGradient id="paint1_linear_21_741" x1="265.103" y1="40.407" x2="276.929" y2="53.3681" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
<linearGradient id="paint2_linear_21_741" x1="266.45" y1="47.9899" x2="274.2" y2="70.2324" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
<linearGradient id="paint3_linear_21_741" x1="272.936" y1="41.2338" x2="299.574" y2="64.9335" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
<linearGradient id="paint4_linear_21_741" x1="272.739" y1="45.0737" x2="284.565" y2="58.0347" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
</defs>
</svg>

        <div class="Frame10" style="width: 329px; height: 201px; padding-bottom: 24px; padding-left: 24px; background: linear-gradient(138deg, rgba(198.55, 215.22, 244.37, 0.56) 0%, rgba(96, 239, 255, 0.55) 100%); border-radius: 15px; justify-content: flex-start; align-items: flex-end; gap: 32px; display: inline-flex">
 
  <div id="counter" style="width: 95px; height: 113px; color: #111416; font-size: 160px; font-family: Sofia Sans; font-weight: 700; line-height: 16.93px; word-wrap: break-word"></div>

<div class="Frame11" style="padding-top: 24px; padding-right: 24px; flex-direction: column; justify-content: flex-start; align-items: flex-end; gap: 56px; display: inline-flex">
    <div style="width: 56px; height: 56px; position: relative">
<svg width="56" height="56" viewBox="0 0 56 56" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="27.8947" cy="27.8947" r="27.8947" fill="white"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M19.9398 24.2349C20.8399 24.2349 21.7032 23.8773 22.3397 23.2408C22.9762 22.6043 23.3337 21.741 23.3337 20.8409C23.3337 19.9408 22.9762 19.0775 22.3397 18.441C21.7032 17.8046 20.8399 17.447 19.9398 17.447C19.0397 17.447 18.1764 17.8046 17.5399 18.441C16.9034 19.0775 16.5458 19.9408 16.5458 20.8409C16.5458 21.741 16.9034 22.6043 17.5399 23.2408C18.1764 23.8773 19.0397 24.2349 19.9398 24.2349ZM19.9398 25.9318C20.6083 25.9318 21.2703 25.8001 21.888 25.5443C22.5056 25.2885 23.0669 24.9135 23.5396 24.4407C24.0123 23.968 24.3873 23.4068 24.6432 22.7891C24.899 22.1715 25.0307 21.5095 25.0307 20.8409C25.0307 20.1724 24.899 19.5104 24.6432 18.8927C24.3873 18.2751 24.0123 17.7138 23.5396 17.2411C23.0669 16.7684 22.5056 16.3934 21.888 16.1375C21.2703 15.8817 20.6083 15.75 19.9398 15.75C18.5896 15.75 17.2947 16.2864 16.34 17.2411C15.3852 18.1958 14.8489 19.4907 14.8489 20.8409C14.8489 22.1911 15.3852 23.486 16.34 24.4407C17.2947 25.3955 18.5896 25.9318 19.9398 25.9318Z" fill="url(#paint0_linear_21_718)"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M17.9949 24.0584C18.0739 24.1372 18.1366 24.2308 18.1794 24.3339C18.2222 24.437 18.2442 24.5475 18.2442 24.6591C18.2442 24.7707 18.2222 24.8812 18.1794 24.9843C18.1366 25.0874 18.0739 25.181 17.9949 25.2598L17.4213 25.8317C16.3175 26.9358 15.6974 28.4331 15.6972 29.9944V33.144C15.6972 33.369 15.6078 33.5848 15.4487 33.7439C15.2896 33.9031 15.0738 33.9924 14.8487 33.9924C14.6237 33.9924 14.4079 33.9031 14.2488 33.7439C14.0896 33.5848 14.0002 33.369 14.0002 33.144V29.9944C14.0005 27.9831 14.7995 26.0543 16.2216 24.632L16.7935 24.0584C16.8723 23.9794 16.9659 23.9167 17.069 23.8739C17.1721 23.8311 17.2826 23.8091 17.3942 23.8091C17.5058 23.8091 17.6163 23.8311 17.7194 23.8739C17.8225 23.9167 17.9161 23.9794 17.9949 24.0584ZM38.0056 23.5493C37.9266 23.6281 37.8639 23.7217 37.8211 23.8248C37.7783 23.9279 37.7563 24.0384 37.7563 24.15C37.7563 24.2616 37.7783 24.3721 37.8211 24.4752C37.8639 24.5783 37.9266 24.6719 38.0056 24.7507L38.5792 25.3226C39.1258 25.8693 39.5594 26.5183 39.8552 27.2325C40.151 27.9467 40.3033 28.7122 40.3033 29.4853V33.144C40.3033 33.369 40.3927 33.5848 40.5518 33.7439C40.7109 33.9031 40.9267 33.9924 41.1518 33.9924C41.3768 33.9924 41.5926 33.9031 41.7517 33.7439C41.9109 33.5848 42.0002 33.369 42.0002 33.144V29.4853C42 27.474 41.201 25.5452 39.7789 24.1229L39.207 23.5493C39.1282 23.4703 39.0346 23.4076 38.9315 23.3648C38.8284 23.322 38.7179 23.3 38.6063 23.3C38.4947 23.3 38.3842 23.322 38.2811 23.3648C38.178 23.4076 38.0844 23.4703 38.0056 23.5493Z" fill="url(#paint1_linear_21_718)"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M35.2122 24.2349C34.3121 24.2349 33.4488 23.8773 32.8124 23.2408C32.1759 22.6043 31.8183 21.741 31.8183 20.8409C31.8183 19.9408 32.1759 19.0775 32.8124 18.441C33.4488 17.8046 34.3121 17.447 35.2122 17.447C36.1124 17.447 36.9756 17.8046 37.6121 18.441C38.2486 19.0775 38.6062 19.9408 38.6062 20.8409C38.6062 21.741 38.2486 22.6043 37.6121 23.2408C36.9756 23.8773 36.1124 24.2349 35.2122 24.2349ZM35.2122 25.9318C34.5437 25.9318 33.8817 25.8001 33.264 25.5443C32.6464 25.2885 32.0852 24.9135 31.6124 24.4407C31.1397 23.968 30.7647 23.4068 30.5088 22.7891C30.253 22.1715 30.1213 21.5095 30.1213 20.8409C30.1213 20.1724 30.253 19.5104 30.5088 18.8927C30.7647 18.2751 31.1397 17.7138 31.6124 17.2411C32.0852 16.7684 32.6464 16.3934 33.264 16.1375C33.8817 15.8817 34.5437 15.75 35.2122 15.75C36.5624 15.75 37.8573 16.2864 38.8121 17.2411C39.7668 18.1958 40.3031 19.4907 40.3031 20.8409C40.3031 22.1911 39.7668 23.486 38.8121 24.4407C37.8573 25.3955 36.5624 25.9318 35.2122 25.9318ZM27.5759 31.447C26.4507 31.447 25.3716 31.8939 24.576 32.6896C23.7804 33.4852 23.3334 34.5642 23.3334 35.6894V37.8955C23.3334 38.1205 23.2441 38.3363 23.0849 38.4954C22.9258 38.6546 22.71 38.7439 22.485 38.7439C22.2599 38.7439 22.0441 38.6546 21.885 38.4954C21.7259 38.3363 21.6365 38.1205 21.6365 37.8955V35.6894C21.6365 34.1142 22.2622 32.6035 23.3761 31.4896C24.4899 30.3758 26.0006 29.75 27.5759 29.75C29.1511 29.75 30.6618 30.3758 31.7757 31.4896C32.8895 32.6035 33.5153 34.1142 33.5153 35.6894V37.8955C33.5153 38.1205 33.4259 38.3363 33.2667 38.4954C33.1076 38.6546 32.8918 38.7439 32.6668 38.7439C32.4417 38.7439 32.2259 38.6546 32.0668 38.4954C31.9077 38.3363 31.8183 38.1205 31.8183 37.8955V35.6894C31.8183 35.1323 31.7086 34.5806 31.4954 34.0659C31.2822 33.5512 30.9697 33.0835 30.5757 32.6896C30.1818 32.2956 29.7141 31.9831 29.1994 31.7699C28.6847 31.5567 28.133 31.447 27.5759 31.447Z" fill="url(#paint2_linear_21_718)"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M27.5758 28.9015C28.4759 28.9015 29.3392 28.5439 29.9756 27.9075C30.6121 27.271 30.9697 26.4077 30.9697 25.5076C30.9697 24.6075 30.6121 23.7442 29.9756 23.1077C29.3392 22.4712 28.4759 22.1136 27.5758 22.1136C26.6756 22.1136 25.8124 22.4712 25.1759 23.1077C24.5394 23.7442 24.1818 24.6075 24.1818 25.5076C24.1818 26.4077 24.5394 27.271 25.1759 27.9075C25.8124 28.5439 26.6756 28.9015 27.5758 28.9015ZM27.5758 30.5985C28.926 30.5985 30.2209 30.0621 31.1756 29.1074C32.1303 28.1527 32.6667 26.8578 32.6667 25.5076C32.6667 24.1574 32.1303 22.8625 31.1756 21.9078C30.2209 20.953 28.926 20.4167 27.5758 20.4167C26.2256 20.4167 24.9307 20.953 23.976 21.9078C23.0212 22.8625 22.4849 24.1574 22.4849 25.5076C22.4849 26.8578 23.0212 28.1527 23.976 29.1074C24.9307 30.0621 26.2256 30.5985 27.5758 30.5985Z" fill="url(#paint3_linear_21_718)"/>
<defs>
<linearGradient id="paint0_linear_21_718" x1="16.1032" y1="16.407" x2="27.9294" y2="29.3681" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
<linearGradient id="paint1_linear_21_718" x1="17.4496" y1="23.99" x2="25.1997" y2="46.2325" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
<linearGradient id="paint2_linear_21_718" x1="23.936" y1="17.2338" x2="50.5736" y2="40.9335" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
<linearGradient id="paint3_linear_21_718" x1="23.7392" y1="21.0737" x2="35.5654" y2="34.0347" gradientUnits="userSpaceOnUse">
<stop stop-color="#548CEE"/>
<stop offset="1" stop-color="#15E7FF"/>
</linearGradient>
</defs>
</svg>

    </div>
    <div class="Frame9" style="flex-direction: column; justify-content: flex-start; align-items: flex-start; gap: 16px; display: flex">
      <div style="color: #8E8D8D; font-size: 12px; font-family: Ubuntu; font-weight: 300; line-height: 24px; word-wrap: break-word">Σύνολο Εργαζομένων</div>
      <div style="color: #6E7279; font-size: 24px; font-family: Ubuntu; font-weight: 300; line-height: 24px; word-wrap: break-word">Γεν. Πληθυσμού</div>
    </div>
  </div>
</div>

       
        <script type="text/javascript">
        {js_code}
        animateCounter("counter", 0, """+str(val)+""", 1000);  // Increase from 0 to 100 in 1 second
        </script></body>
        """
    )






def ad_button2(id,kpdf,js_code):
    st.subheader("Εργαζόμενοι")
    #colors = px.colors.qualitative.Plotly
    colors = ["rgb(65,105,225)", "rgb(135,206,235)", "rgb(255,0,0)"]
    year_filter = st.selectbox("Έτος", kpdf['year'].tolist())

    with st.container():
        col1, col2,col3 = st.columns(3)
        with col1:
            
            text=str(kpdf['D3'][kpdf['year']==str(year_filter)].iloc[0])
            # st.write('Δ3-Εργαζόμενοι Γενικού Πληθυσμού: '+text)
            st.markdown("<h3 style='text-align: center; color: grey;'>Εργαζόμενοι Γεν. Πληθυσμού</h3>", unsafe_allow_html=True)

            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;     font-family: 'Source Sans Pro',sans-serif;font-weight: bold; font-size: 60px; background-color: #f1f1f1; width: 130px; height: 130px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter("counter", 0, """+str(text)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
            #st.write(kpdf['D3'][kpdf['year']==str(year_filter)])

        with col2:
            
            text=kpdf['D5'][kpdf['year']==str(year_filter)].iloc[0]
            # st.write('Δ5-Εργαζόμενοι ΛΥΨΥ: '+text)
            st.markdown("<h3 style='text-align: center; color: grey;'>Εργαζόμενοι ΛΥΨΥ</h3>", unsafe_allow_html=True)

            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 60px; background-color: #f1f1f1; width: 130px; height: 130px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter("counter", 0, """+str(text)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
            #st.write(kpdf['D5'][kpdf['year']==str(year_filter)])


          
        with col3:
            #st.write('D7-Εργαζόμενοι ΕΚΟ')
            text=kpdf['D7'][kpdf['year']==str(year_filter)].iloc[0]
            # st.write('D7-Εργαζόμενοι ΕΚΟ: '+text)
            st.markdown("<h3 style='text-align: center; color: grey;'>Εργαζόμενοι ΕΚΟ</h3>", unsafe_allow_html=True)

            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 60px; background-color: #f1f1f1; width: 130px; height: 130px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter("counter", 0, """+str(text)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
            #st.write(kpdf['D7'][kpdf['year']==str(year_filter)])

    with st.container():
        col1, col2,col3 = st.columns(3)
        with col1:
            # Filter the dataframe based on the selected year
            st.markdown("<h3 style='text-align: center; color: grey;'>Εργαζόμενοι Γεν. Πληθ. (% επί του Συνόλου)</h3>", unsafe_allow_html=True)
            filtered_kpdf = kpdf[kpdf["year"] == str(year_filter)]
            # Select the value from the filtered dataframe
            d9_value = filtered_kpdf["D9"].iloc[0]
            fig=gaugeChart(d9_value,'royalblue')
            st.plotly_chart(fig,use_container_width=True)
            

        with col2:
            # Filter the dataframe based on the selected year
            st.markdown("<h3 style='text-align: center; color: grey;'>Εργαζόμενοι ΛΥΨΥ (% επί του Συνόλου)</h3>", unsafe_allow_html=True)
            filtered_kpdf = kpdf[kpdf["year"] == str(year_filter)]
            # Select the value from the filtered dataframe
            d10_value = filtered_kpdf["D10"].iloc[0]
            fig=gaugeChart(d10_value,'skyblue')

            st.plotly_chart(fig,use_container_width=True)
        with col3:
            # Filter the dataframe based on the selected year
            st.markdown("<h3 style='text-align: center; color: grey;'>Εργαζόμενοι ΕΚΟ (% επί του Συνόλου)</h3>", unsafe_allow_html=True)
            filtered_kpdf = kpdf[kpdf["year"] == str(year_filter)]
            # Select the value from the filtered dataframe
            d11_value = filtered_kpdf["D11"].iloc[0]
            fig=gaugeChart(d11_value,'red')
            st.plotly_chart(fig,use_container_width=True)

        with st.container():
            col1, col2,col3 = st.columns(3)
            with col1:
                pass
            with col2:
                # Select the relevant columns
                st.markdown("<h3 style='text-align: center; color: grey;'>Διαχρονική Κατανομή Εργαζομένων ΚοιΣΠΕ</h3>", unsafe_allow_html=True)

                # Select the relevant columns
                columns = ['D9', 'D10', 'D11']
                # kpdf_selected = kpdf[columns]
                # Create the stacked bar plot using Plotly
                legend_labels = ['Γενικού Πληθυσμού', 'ΛΥΨΥ', 'ΕΚΟ']


                fig=stackedChart(columns,kpdf,legend_labels,'Έτος','% επι του Συνόλου',colors)

                # Show the plot
                st.plotly_chart(fig, use_container_width=True)
            with col3:
                pass



def ad_button3(id,kpdf,js_code):
    st.subheader("Ωρες απασχόλησης εργαζομένων")
    year_filter = st.selectbox("Έτος", kpdf['year'].tolist())
   
    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            #st.write('Δ14-Ωρες απασχολησης εργαζομένων ΛΥΨΥ(Μεσος Όρος)')
            text=kpdf['D14'][kpdf['year']==str(year_filter)].iloc[0]
            text=str(text.round())
            #st.write(kpdf['D14'][kpdf['year']==str(year_filter)])
            # st.write('Δ14-'+text)
            st.markdown("<h3 style='text-align: center; color: grey;'>Ωρες απασχολησης εργαζομένων ΛΥΨΥ(Μεσος Όρος)</h3>", unsafe_allow_html=True)

            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 60px; background-color: #f1f1f1; width: 130px; height: 130px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter("counter", 0, """+str(text)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
            # st.metric(label="Συνολο Μελών "+str(kpdf['D1'][kpdf['year']==str(year_filter)][0]), value=int(kpdf['D1'][kpdf['year']==str(year_filter)][0]), delta=-0.5,delta_color="inverse")

        with col2:
            #st.write('Δ15-Ωρες απασχολησης εργαζομένων ΕΚΟ(Μεσος Όρος)')
            #st.write(kpdf['D15'][kpdf['year']==str(year_filter)])
            text=kpdf['D15'][kpdf['year']==str(year_filter)].iloc[0]
            text=str(text.round())
            # st.write('Δ15-Ωρες απασχολησης εργαζομένων ΕΚΟ(Μεσος Όρος): '+text)
            st.markdown("<h3 style='text-align: center; color: grey;'>Ωρες απασχολησης εργαζομένων ΕΚΟ(Μεσος Όρος)</h3>", unsafe_allow_html=True)

            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center; font-family: 'Source Sans Pro',sans-serif;font-weight: bold; font-size: 60px; background-color: #f1f1f1; width: 130px; height: 130px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter("counter", 0, """+str(text)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
        
    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            #st.write('Δ12-Ωρες απασχολησης εργαζομένων ΛΥΨΥ')
            st.markdown("<h3 style='text-align: center; color: grey;'>% Μεταβολή Ωρών Απασχόλησης ΛΥΨΥ</h3>", unsafe_allow_html=True)
            categories=kpdf['year'].tolist()
            values =kpdf['D12'].tolist()
            fig=pctChangeChart(values,categories,'Values','Ποσοστιαία μεταβολή','Percentage Change','Values')
            st.plotly_chart(fig,use_container_width=True)


        with col2:
            #st.write('Δ13-Ωρες απασχολησης εργαζομένων ΕΚΟ')
            st.markdown("<h3 style='text-align: center; color: grey;'>% Μεταβολή Ωρών Απασχόλησης ΕΚΟ</h3>", unsafe_allow_html=True)

            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D13'].tolist()

            fig=pctChangeChart(values,categories,'Values','Ποσοστιαία μεταβολή','Percentage Change','Values')
            st.plotly_chart(fig,use_container_width=True)
        


def ad_button4(id,kpdf,js_code):
    st.subheader("Ετήσιες Μονάδες Εργασίας")
    colors = px.colors.qualitative.Plotly

    year_filter = st.selectbox("Έτος", kpdf['year'].tolist())

    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            #st.write('D18')
            #st.write(kpdf['D18'][kpdf['year']==str(year_filter)])
            text=str(kpdf['D18'][kpdf['year']==str(year_filter)].iloc[0])
            # st.write('D18 Ετησιες μοναδες εργασιας: '+text)
            st.markdown("<h3 style='text-align: center; color: grey;'>Ετήσιες Μονάδες Εργασίας</h3>", unsafe_allow_html=True)

            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 60px; background-color: #f1f1f1; width: 130px; height: 130px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(text)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
        with col2:
            #st.write('D19')
            #st.write(kpdf['D19'][kpdf['year']==str(year_filter)])
            text=str(kpdf['D19'][kpdf['year']==str(year_filter)].iloc[0])
            # st.write('D19 Ετησιες μοναδες εργασιας: '+text)
            st.markdown("<h3 style='text-align: center; color: grey;'>Ετήσιες Μονάδες Εργασίας(Μέσος Όρος)</h3>", unsafe_allow_html=True)

            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 60px; background-color: #f1f1f1; width: 130px; height: 130px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(text)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )

    with st.container():
        col1, col2 =st.columns(2)
        
        #     # val=50
        with col1:
            # Create the layout with two y-axes
            st.markdown("<h3 style='text-align: center; color: grey;'>Ετήσιες Μονάδες Εργασίας ΛΥΨΥ % επί του Συνόλου</h3>", unsafe_allow_html=True)
            val = float(kpdf['D22'][kpdf['year'] == str(year_filter)].iloc[0])
            fig=donut_pct_Chart(val,'rgb(135 206 235)', 'rgb(240,240,240)',['(%) Μ.Ε. ΛΥΨΥ επι του συνόλου', ' '])
            st.plotly_chart(fig, use_container_width=True)


        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>Ετήσιες Μονάδες Εργασίας ΕΚΟ % επί του Συνόλου</h3>", unsafe_allow_html=True)
            val2=float(kpdf['D23'][kpdf['year']==str(year_filter)].iloc[0])
            fig=donut_pct_Chart(val2,'rgb(113,209,145)','rgb(240,240,240)',['(%) Μ.Ε. ΕΚΟ επι του συνόλου', ' '])
            st.plotly_chart(fig,use_container_width=True)

    
    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μεταβολή Μονάδων Εργασίας ΛΥΨΥ</h3>", unsafe_allow_html=True)
            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D18_lipsi'].astype(int).tolist()

            fig=pctChangeChart(values,categories,'Αρ.Μονάδων Εργασίας ΛΥΨΥ','Ποσοστιαία μεταβολή','% Μεταβολή','Μ.Ε. ΛΥΨΥ')
            st.plotly_chart(fig,use_container_width=True)


        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μεταβολή Μονάδων Εργασίας ΕΚΟ</h3>", unsafe_allow_html=True)

            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D18_eko'].astype(int).tolist()
            fig=pctChangeChart(values,categories,'Αρ.Μονάδων Εργασίας ΕΚΟ','Ποσοστιαία μεταβολή','% Μεταβολή','Μ.Ε. ΕΚΟ')
            st.plotly_chart(fig,use_container_width=True)


    with st.container():
         col1, col2,col3 = st.columns(3)
         with col1:
             pass
         with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>Διαχρονική Κατανομή Μονάδων Εργασίας ΚοιΣΠΕ</h3>", unsafe_allow_html=True)

            # Select the relevant columns
            columns = ['D22', 'D23', 'D22_23_g']
            legend_labels = ['Μ.Ε. ΛΥΨΥ', 'Μ.Ε. ΕΚΟ', 'Μ.Ε. Γεν.Πληθ.']
            kpdf_selected = kpdf[columns]
            fig=stackedChart(columns,kpdf,legend_labels,'Έτος','% επι του Συνόλου',colors)
            st.plotly_chart(fig, use_container_width=True)
         with col3:
            pass
             



        




def e_button5(id,kpdf,js_code):
    st.subheader("Σύνολο κύκλου εργασιών ανά τομέα & κατανομή ανά δραστηριότητα ανά έτος")
    colors = px.colors.qualitative.Plotly


    year_filter = st.selectbox("Έτος", kpdf['year'].tolist())
    val2=float(kpdf['D24'][kpdf['year']==str(year_filter)].iloc[0])
        #st.write(first_alias_value)
        #st.markdown(text)
    st.markdown("<h3 style='text-align: center; color: grey;'>Κυκλοι Εργασιών</h3>", unsafe_allow_html=True)
    # text="**"+str(val2)+"** **&#8364;**"
    html(
        f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
        <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
        <script type="text/javascript">
        {js_code}
        animateCounter3("counter", 0, """+str(val2)+""", 1000);  // Increase from 0 to 100 in 1 second
        </script></body>
        """
    )

    st.markdown("<h3 style='text-align: center; color: grey;'>Yπηρεσίες</h3>", unsafe_allow_html=True)

    with st.container():
        col1, col2,col3 = st.columns(3)

        with col1:
            st.markdown("<h3 style='text-align: center; color: grey;'>🏠 Κτηρίων & Εξ. Χώρων</h3>", unsafe_allow_html=True)

            val26=float(kpdf['D26'][kpdf['year']==str(year_filter)].iloc[0])
            # text26="**🏠** **"+str(val26)+"** &#8364; "

            html(
                    f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                    <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                    <script type="text/javascript">
                    {js_code}
                    animateCounter3("counter", 0, """+str(val26)+""", 1000);  // Increase from 0 to 100 in 1 second
                    </script></body>
                    """
                )


        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>🍴 Εστίασης</h3>", unsafe_allow_html=True)

            val27=float(kpdf['D27'][kpdf['year']==str(year_filter)].iloc[0])
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter3("counter", 0, """+str(val27)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
        with col3:
            st.markdown("<h3 style='text-align: center; color: grey;'>💬 Λοιπές Δραστηρίοτητες</h3>", unsafe_allow_html=True)

            val28=float(kpdf['D28'][kpdf['year']==str(year_filter)].iloc[0])
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter3("counter", 0, """+str(val28)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
            )
    with st.container():
        col1, col2,col3 = st.columns(3)
        with col1:
            pass
        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>Ποσοστό επί του Συνόλου ανά Κατηγορία Κύκλου Εργασιών</h3>", unsafe_allow_html=True)

            labels = ['Κτηρια & Εξ.Χώροι ','Εστίαση','Λοιπές Δραστηριότητες']
            values=[val26,val27,val28]
            fig=pieChart(labels,values,colors)
            st.plotly_chart(fig,use_container_width=True)
        with col3:
            pass

    with st.container():
        col1,col2,col3 = st.columns(3)
        with col1:
            pass
        with col2:
             # Select the relevant columns
            st.markdown("<h3 style='text-align: center; color: grey;'>Διαχρονική Κατανομή Κύκλου Εργασιών ανά Κατηγορία</h3>", unsafe_allow_html=True)





            columns = ['D26', 'D27', 'D28']
            legend_labels = ['Κτηρια & Εξ.Χώροι ','Εστίαση','Λοιπές Δραστηριότητες']

            kpdf_selected = kpdf[columns]
            # Create the stacked bar plot using Plotly
            fig=stackedChart2(columns,kpdf,legend_labels,'Έτος','Συχνότητα',colors)
            st.plotly_chart(fig,use_container_width=True)
        with col3:
            pass
   




def e_button6(id,kpdf,js_code):
    st.subheader("% Mεταβολή κύκλου εργασιών ανά δραστηριότητα ανά έτος")
    year_filter = st.selectbox("Έτος", kpdf['year'].tolist())
    val1=float(kpdf['D24'][kpdf['year']==str(year_filter)].iloc[0])
    val2=float(kpdf['D29'][kpdf['year']==str(year_filter)].iloc[0])
    val3=float(kpdf['D26'][kpdf['year']==str(year_filter)].iloc[0])
    val4=float(kpdf['D30'][kpdf['year']==str(year_filter)].iloc[0])
    val5=float(kpdf['D27'][kpdf['year']==str(year_filter)].iloc[0])
    val6=float(kpdf['D31'][kpdf['year']==str(year_filter)].iloc[0])
    val7=float(kpdf['D28'][kpdf['year']==str(year_filter)].iloc[0])
    val8=float(kpdf['D32'][kpdf['year']==str(year_filter)].iloc[0])
    with st.container():
        col1, col2,col3,col4 = st.columns(4)
        with col1:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Μεταβολή Κύκλου Εργασιών</h3>", unsafe_allow_html=True)
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(val1)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
                        )
            st.metric(label="% Μεταβολή Κύκλου Εργασιών",label_visibility="hidden", value=val1, delta=f'{val2}%')



        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Μετ.Kύκλ.Εργ. Κτήρια/Εξωτερικοί Χώροι</h3>", unsafe_allow_html=True)
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center; font-family: 'Source Sans Pro',sans-serif;font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(val3)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
                        )
            st.metric(label="% Μετ.Kύκλ.Εργ. Κτήρια/Εξωτ. Χώροι ", label_visibility="hidden", value=val3, delta=f'{val4}%')
        with col3:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Μετ.Κύκλ.Εργ. Υπηρ. Εστίασης</h3>", unsafe_allow_html=True)
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(val5)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
                        )
            st.metric(label="% Μετ.Κύκλ.Εργ. Υπηρ. Εστίασης",label_visibility="hidden", value=val5, delta=f'{val6}%')
        with col4:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Μετ.Κύκλ.Εργ. Λοιπ. Εργασίες</h3>", unsafe_allow_html=True)
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(val7)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
                        )

            st.metric(label="% Μετ.Kυκλ.Εργ. Λοιπές εργασίες",label_visibility="hidden", value=val7, delta=f'{val8}%')

        

    st.markdown("<br>", unsafe_allow_html=True)

    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μεταβολή Κύκλου Εργασιών</h3>", unsafe_allow_html=True)

            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D24'].astype(int).tolist()

            fig=pctChangeChart(values,categories,'Values','Ποσοστιαία μεταβολή','Percentage Change','Values')
            st.plotly_chart(fig,use_container_width=True)

        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μετ.Kύκλ.Εργ. Κτήρια/Εξωτ. Χώροι</h3>", unsafe_allow_html=True)

            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D26'].astype(int).tolist()

            fig=pctChangeChart(values,categories,'Values','Ποσοστιαία μεταβολή','Percentage Change','Values')
            st.plotly_chart(fig,use_container_width=True)

    st.markdown("<br>", unsafe_allow_html=True)

    with st.container():
        col1, col2 = st.columns(2)
        with col1:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μετ.Κύκλ.Εργ. Υπηρ. Εστίασης</h3>", unsafe_allow_html=True)

            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D27'].astype(int).tolist()
            fig=pctChangeChart(values,categories,'Values','Ποσοστιαία μεταβολή','Percentage Change','Values')
            st.plotly_chart(fig,use_container_width=True)

        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μετ.Κύκλ.Εργ. Λοιπ. Δραστ.</h3>", unsafe_allow_html=True)

            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D28'].astype(int).tolist()
            fig=pctChangeChart(values,categories,'Values','Ποσοστιαία μεταβολή','Percentage Change','Values')
            st.plotly_chart(fig,use_container_width=True)





def e_button7(id,kpdf,js_code):
    st.subheader("Κατανομή πλήθους ΚοιΣΠΕ βάσει προσίμου καθαρών ανά έτος")

    year_filter = st.selectbox("Έτος", kpdf['year'].tolist())
    val1=float(kpdf['D36_overal'][kpdf['year']==str(year_filter)].iloc[0])
    val2=float(kpdf['D36'][kpdf['year']==str(year_filter)].iloc[0])
    val3=float(kpdf['D38'][kpdf['year']==str(year_filter)].iloc[0])
    val4=float(kpdf['D40'][kpdf['year']==str(year_filter)].iloc[0])
    val5=float(kpdf['D40_metaboli'][kpdf['year']==str(year_filter)].iloc[0])

    with st.container():
        col1, col2,col3 = st.columns(3)
        with col1:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μεταβολή Καθαρών αποτελεσμάτων</h3>", unsafe_allow_html=True)
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(val1)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
                        )
            st.metric(label="% Ετήσια Μεταβολή Καθαρών αποτελεσμάτων",label_visibility="hidden", value=val1, delta=f'{val2}%')
        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>Αριθμοδείκτη καθαρών αποτελεσμάτων</h3>", unsafe_allow_html=True)
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;    font-family: 'Source Sans Pro',sans-serif; font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(val3)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """
                        )
            st.metric(label="Αριθμοδείκτη καθαρών αποτελεσμάτων", label_visibility="hidden",value=val3)
        with col3:
            st.markdown("<h3 style='text-align: center; color: grey;'>Έσοδα ανά εργαζόμενο / % Ετήσια Μεταβολή</h3>", unsafe_allow_html=True)
            html(
                f"""<body style="display: flex;flex-wrap: nowrap;align-content: center;justify-content: center;">
                <div id="counter" style="text-align: center;     font-family: 'Source Sans Pro',sans-serif;font-weight: bold; font-size: 50px; background-color: #f1f1f1; width: 140px; height: 140px; border-radius: 50%; display: flex; align-items: center; justify-content: center;"></div>
                <script type="text/javascript">
                {js_code}
                animateCounter2("counter", 0, """+str(val4)+""", 1000);  // Increase from 0 to 100 in 1 second
                </script></body>
                """    )

            st.metric(label="Έσοδα ανά εργαζόμενο / % Ετήσια Μεταβολή", label_visibility="hidden", value=val4, delta=f'{val5}%')
    
    st.markdown("<br>", unsafe_allow_html=True)

    with st.container():
        col1,col2 = st.columns(2)
        with col1:
            st.markdown("<h3 style='text-align: center; color: grey;'>% Ετήσια Μεταβολή Καθαρών Αποτελεσμάτων</h3>", unsafe_allow_html=True)

            categories=kpdf['year'].tolist()
            # Sample data
            # categories = ['Category A', 'Category B', 'Category C', 'Category D']
            values =kpdf['D36_overal'].astype(int).tolist()
            fig=pctChangeChart(values,categories,'Values','Ποσοστιαία μεταβολή','Percentage Change','Values')
            st.plotly_chart(fig,use_container_width=True)
        with col2:

            st.markdown("<h3 style='text-align: center; color: grey;'>Συμμετοχή (%) Επιδοτήσεων στα έσοδα / Ετος</h3>", unsafe_allow_html=True)

             
            val39=float(kpdf['D39'][kpdf['year']==str(year_filter)].iloc[0])
            fig=donut_pct_Chart(val39,'rgb(135 206 235)', 'rgb(240,240,240)',['% Συμμετοχή Επιδοτήσεων', ' '])
            st.plotly_chart(fig, use_container_width=True)
        

    st.markdown("<br>", unsafe_allow_html=True)

    with st.container():
        col1,col2,col3 = st.columns(3)  
        with col1:
            pass
        with col2:
            st.markdown("<h3 style='text-align: center; color: grey;'>Αριθμοδείκτης Καθαρών Αποτελεσμάτων / Έτος</h3>", unsafe_allow_html=True)

            fig = px.area(kpdf,x='year', y='D38', markers=True)
            st.plotly_chart(fig,use_container_width=True)
        with col3:
            pass



def display_pinkas_submenu(id):
    st.subheader("pinkas Submenu")
    st.write("Content for pinkas submenu")
    
    response = json.loads(requests.get("https://cmtprooptiki.gr/api/getemploymentcmt.json").text)
    df=pd.json_normalize(response, max_level=2)
    df['year'] = df['year'].apply(format_year)

    df1=df.groupby(['koispe_id','year'])['profile.eko.sum'].sum()
    dftest=pd.DataFrame(df1).reset_index()
    
    st.write(df)
    dffilter=dftest[dftest['koispe_id']==int(id)]
    # dffilter['year'] = dffilter['year'].apply(format_year)
    # dffilter
    # data_canada = px.data.gapminder().query("country == 'Canada'")
    fig = px.bar(dffilter, x=dffilter['year'].astype(str), y='profile.eko.sum',orientation='v')
    st.plotly_chart(fig)

    # Add content for pinkas submenu here




def get_url_params():
    query_params = st.experimental_get_query_params()
    id_received = query_params.get("id", [""])[0]
    
    return id_received
    # id_input = st.text_input("Enter ID", value=id_received)
    # if id_input:
    #     display_contents(id_input)

def display_contents(id_received):
    # Retrieve the contents of the specific ID (replace with your own logic)
    contents = {'id': id_received, 'name': 'John eseaas', 'email': 'john@example.com'}

    st.write(f'# Contents of ID: {id_received}')
    st.write(f'Name: {contents["name"]}')
    st.write(f'Email: {contents["email"]}')



if __name__ == "__main__":
    main()
    
